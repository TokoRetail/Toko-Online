<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Products extends CI_Controller {

         

        public function __Construct(){
        parent::__construct();
	        $this->load->helper(array('url','html','form'));
	        $this->load->model('model_products');
	    
        }
	
        public function index()
	{
	        $data['products']= $this->model_products->all();
		$this->load->view('backend/view_all_products',$data);
	}
	
	public function create(){
	
	 	$this->form_validation->set_rules('name', 'Product Name', 'required');
                $this->form_validation->set_rules('description', 'Product Description', 'required');
                $this->form_validation->set_rules('price', 'Product Price', 'required|integer');
                $this->form_validation->set_rules('stock', 'Available Stock', 'required|integer');

                if ($this->form_validation->run() == FALSE)
                {
	  		$this->load->view('backend/form_tambah_products');
	        }else{
	                $config['upload_path'] = './uploads/';
			$config['allowed_types'] = 'jpg|png';
			$config['max_size']	= '2048000';
			$config['max_width']  = '2000';
			$config['max_height']  = '2000';
	
			$this->load->library('upload', $config);
	
		        if (! $this->upload->do_upload())
			{
				//file gagal di upload
				$this->load->view('backend/form_tambah_products');
				echo "gagal upload";
			}else{
				//file berhasil di upload
				$gambar=$this->upload->data();
				$data_product=array(
		        	'name'		=> set_value('name'),
		        	'description'	=> set_value('description'),
		        	'price'		=> set_value('price'),
		        	'stock'		=> set_value('stock'),
		        	'image'		=> $gambar['file_name']
		                );
		        	$this->model_products->create($data_product); 
		        	redirect('admin/products'); 
			
			}
	        
	        	
	        }
	}
	
	public function update($id){
	
	        $this->form_validation->set_rules('name', 'Product Name', 'required');
                $this->form_validation->set_rules('description', 'Product Description', 'required');
                $this->form_validation->set_rules('price', 'Product Price', 'required|integer');
                $this->form_validation->set_rules('stock', 'Available Stock', 'required|integer');

                if ($this->form_validation->run() == FALSE)
                {
                $data['product']= $this->model_products->find($id);
	  	$this->load->view('backend/form_edit_products',$data);
	  	}else{
	  	        if($_FILES['userfile']['name']!=''){
	  	        //form submit dengan gambar di isi
	  		$config['upload_path'] = './uploads/';
			$config['allowed_types'] = 'jpg|png';
			$config['max_size']	= '2048000';
			$config['max_width']  = '2000';
			$config['max_height']  = '2000';
	
			$this->load->library('upload', $config);
	                
		        if (! $this->upload->do_upload())
			{
				$data['product']= $this->model_products->find($id);
		  	        $this->load->view('backend/form_edit_products',$data);
			}else{
				$gambar=$this->upload->data();
				$data_product=array(
		        	'name'		=> set_value('name'),
		        	'description'	=> set_value('description'),
		        	'price'		=> set_value('price'),
		        	'stock'		=> set_value('stock'),
		        	'image'		=> $gambar['file_name']
		                );
		                $this->model_products->update($id,$data_product);
		                redirect('admin/products');
			}
	  	    }else{
	  	    //form submit dengan gambar di kosongkan
	  	    $data_product=array(
		        	'name'		=> set_value('name'),
		        	'description'	=> set_value('description'),
		        	'price'		=> set_value('price'),
		        	'stock'		=> set_value('stock'),
		                );
		                $this->model_products->update($id,$data_product);
		                redirect('admin/products');
	  	    }     
	  	}
	}
	
	public function delete($id){
		 $this->model_products->delete($id);
		 redirect('admin/products');
	}
	
	
}
?>
